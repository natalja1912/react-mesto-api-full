{"version":3,"sources":["images/header-logo.svg","components/Header/Header.js","components/ProtectedRoute.js","components/auth.js","components/PopupWithForm/PopupWithForm.js","components/Login/Login.js","components/Register/Register.js","contexts/CurrentUserContext.js","components/Card/Card.js","components/Main/Main.js","components/ImagePopup/ImagePopup.js","components/Footer/Footer.js","utils/api.js","components/EditProfilePopup/EditProfilePopup.js","components/EditAvatarPopup/EditAvatarPopup.js","components/AddPlacePopup/AddPlacePopup.js","components/AddDeletePopup/AddDeletePopup.js","utils/formValidator.js","components/Cards.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","headerLogoPath","alt","ProtectedRoute","Component","component","props","loggedIn","to","BASE_URL","PopupWithForm","name","isOpen","onSubmit","noValidate","title","children","type","buttonText","onClick","onClose","Login","history","useHistory","useState","email","password","inputValues","setInputValues","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","localStorage","setItem","token","catch","err","console","log","handleLogin","push","placeholder","required","id","onChange","Register","CurrentUserContext","React","createContext","Card","card","handleCard","handleCardLike","handleCardDelete","currentUser","useContext","isOwn","_id","owner","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","aria-label","length","Main","cards","onEditProfile","onAddPlace","onEditAvatar","onCardClick","style","backgroundImage","avatar","about","map","item","key","ImagePopup","Footer","api","options","_getResponseData","res","ok","Promise","reject","Error","status","this","_url","baseUrl","_headers","cardId","authorization","EditProfilePopup","onUpdateUser","isLoading","setName","description","setDescription","useEffect","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","onUpdateCard","setLink","AddDeletePopup","FormValidator","form","_form","_inputList","Array","from","querySelectorAll","inputSelector","_button","querySelector","buttonSelector","_fieldSelector","fieldSelector","_errorSelector","errorSelector","addEventListener","evt","_toggleSubmitButton","forEach","formInput","formError","closest","_isValid","validity","valid","_hideInputError","_showInputError","classList","add","textContent","validationMessage","remove","input","reset","_hasInvalidInput","setAttribute","removeAttribute","_setEventListeners","selectors","formSelector","Cards","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeletePopupOpen","setDeletePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoading","cardToDelete","setCardToDelete","closeAllPopups","undefined","all","getUserInfo","getInitialCards","user","items","placeValidator","document","enableValidation","formReset","profileValidator","avatarValidator","Provider","changeLike","newCard","newCards","c","sendUserInfo","finally","handleUpdateUser","postNewCard","handleAddPlaceSubmit","deleteCard","filter","changeAvatar","handleUpdateAvatar","App","setLoggedIn","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cf402b26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";","import React from 'react';\r\nimport headerLogoPath from '../../images/header-logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={headerLogoPath} alt=\"Логотип\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n    return (\r\n        <Route>\r\n            {\r\n                () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const authorize = (password, email) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ \"password\": password, \"email\": email })\r\n    })\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            if (data) {\r\n                localStorage.setItem('jwt', data.token);\r\n                return data;\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"password\": password, \"email\": email })\r\n    })\r\n        .then((response => response.json()))\r\n        .then((data) => {\r\n            return data;\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n}","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n    return (\r\n        <section className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n              <form className={`popup__container popup__container_type_${props.name} popup__item`} name={`popup__container_type_${props.name}`} onSubmit={props.onSubmit} noValidate>\r\n                <h2 className={`popup__heading popup__heading_type_${props.name}`}>{props.title}</h2>\r\n                    {props.children}\r\n                    <button className={`popup__add-button popup__add-button_type_${props.name}`}  type=\"submit\">\r\n                      {props.buttonText}\r\n                  </button>\r\n                    <button className={`popup__close-button popup__close-button_type_${props.name}`} type=\"button\" onClick={props.onClose}></button>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as auth from '../auth';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nfunction Login(props) {\r\n    const history = useHistory();\r\n    const [inputValues, setInputValues] = useState({ email: '', password: '' });\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n        setInputValues(\r\n            {\r\n                ...inputValues,\r\n                [name]: value,\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!inputValues.email || !inputValues.password) {\r\n            return;\r\n        }\r\n        auth.authorize(inputValues.password, inputValues.email)\r\n            .then((data) => {\r\n                console.log(data);\r\n                if (data.token) {\r\n                    setInputValues({ email: '', password: '' });\r\n                    props.handleLogin();\r\n                    history.push('/cards');\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <PopupWithForm name=\"dark\" title=\"Вход\" buttonText=\"Войти\" isOpen={true} onSubmit={(e) => handleSubmit(e)}>\r\n                <input className=\"popup__input popup__input_dark\" name=\"email\" placeholder=\"Email\" required id=\"email\" type=\"text\" onChange={(e) => handleChange(e)} />\r\n                <input className=\"popup__input popup__input_dark\" name=\"password\" placeholder=\"Пароль\" required id=\"password\" type=\"password\" onChange={(e) => handleChange(e)} />\r\n            </PopupWithForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as auth from '../auth';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nfunction Register(handleLogin, ...props) {\r\n    const history = useHistory();\r\n    const [inputValues, setInputValues] = useState({ email: '', password: '' });\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n        setInputValues(\r\n            {\r\n                ...inputValues,\r\n                [name]: value\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!inputValues.email || !inputValues.password) {\r\n            console.log(\"Не введены данные\");\r\n            return;\r\n        }\r\n        auth.register(inputValues.password, inputValues.email)\r\n            .then((data) => {\r\n                if (data) {\r\n                    history.push('/sign-up');\r\n                }\r\n                else {\r\n                    console.log('Произошла ошибка');\r\n                }\r\n            })\r\n            .catch (err => console.log(err));\r\n    }\r\n\r\nreturn (\r\n    <div className=\"register\">\r\n        <PopupWithForm name=\"dark\" isOpen={true} title=\"Регистрация\" buttonText=\"Зарегистрироваться\" onSubmit={(e) => handleSubmit(e)}>\r\n            <input className=\"popup__input popup__input_dark\" name=\"email\" placeholder=\"Email\" required id=\"email\" type=\"text\" onChange={(e) => handleChange(e)} />\r\n            <input className=\"popup__input popup__input_dark\" name=\"password\" placeholder=\"Пароль\" required id=\"password\" type=\"password\" onChange={(e) => handleChange(e)} />\r\n        </PopupWithForm>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card({ card, handleCard, handleCardLike, handleCardDelete }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = currentUser._id === card.owner._id;\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `place__delete-button ${isOwn ? 'place__delete-button_visible' : 'place__delete-button_hidden'}`\r\n    );\r\n\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    const cardLikeButtonClassName = `place__like-button ${isLiked && 'place__like-button_active'}`;\r\n\r\n    function handleClick() {\r\n        handleCard(card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"place\">\r\n            <button className=\"place__image-button\" onClick={handleClick}><img className=\"place__image\" src={card.link} alt={card.name} /></button>\r\n            <div className=\"place__info\">\r\n                <p className=\"place__heading\">{card.name}</p>\r\n                <div className=\"place__buttons\">\r\n                    <button className={cardLikeButtonClassName} onClick={() => handleCardLike(card)} aria-label=\"Мне нравится\" type=\"button\"></button>\r\n                    <button className=\"place__sumoflikes-button\" aria-label=\"Количество лайков\" type=\"button\">{card.likes ? card.likes.length : 0}</button>\r\n                </div>\r\n            </div>\r\n            <button className={cardDeleteButtonClassName} onClick={() => handleCardDelete(card)} aria-label=\"Удалить картинку\" type=\"button\"></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nfunction Main({ cards, onEditProfile, onAddPlace, onEditAvatar, onCardClick, handleCardLike, handleCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"cover\">\r\n        <div className=\"cover__profile\">\r\n          <button className=\"cover__image\" style={{ backgroundImage: `url(${currentUser.avatar})` }} onClick={onEditAvatar}></button>\r\n          <div className=\"cover__heading-info\">\r\n            <h1 className=\"cover__heading\">{currentUser.name}</h1>\r\n            <button className=\"cover__edit\" onClick={onEditProfile} aria-label=\"Редактировать\" type=\"button\"></button>\r\n          </div>\r\n          <p className=\"cover__subheading\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"cover__add\" onClick={onAddPlace} aria-label=\"Добавить\" type=\"button\"></button>\r\n      </section>\r\n      <section className=\"places\">\r\n        {cards.map((item) => (<Card key={item._id} card={item} handleCard={onCardClick} handleCardLike={(card) => handleCardLike(card)} handleCardDelete={(card) => handleCardDelete(card)} />))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n  return (\r\n    <section className={`popup popup_type_photo ${card && 'popup_opened'}`} >\r\n      <div className=\"popup__image-group popup__item\">\r\n        <img className=\"popup__image\" src={card ? card.link : ''} alt={card ? card.name : ''} />\r\n        <p className=\"popup__text popup__text_type_photo\">{card ? card.name : ''}</p>\r\n        <button className=\"popup__close-button popup__close-button_type_photo\" onClick={onClose} type=\"button\"></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy;2020&nbsp;Mesto&nbsp;Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","class Api {\r\n  constructor(options) {\r\n    this._url = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _getResponseData = (res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: this._headers\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._headers\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n  }\r\n\r\n  sendUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n  }\r\n\r\n  postNewCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n  }\r\n\r\n  changeLike(cardId, isLiked) {\r\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\r\n      method: isLiked ? 'PUT' : 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n  }\r\n\r\n  changeAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\r\n  headers: {\r\n    authorization: 'd92f283c-c212-4fc6-810d-3af1a30b9902',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;","import React, { useState, useEffect } from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoading }) {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n            name,\r\n            about: description,\r\n            avatar: currentUser.avatar,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" buttonText={isLoading ? \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={onClose} onSubmit={(e) => handleSubmit(e)}>\r\n            <label className=\"popup__input\">\r\n                <input onChange={(e) => setName(e.target.value)} type=\"text\" className=\"popup__text popup__text_type_name\" name=\"popup__text_type_name\" placeholder=\"Имя исследователя\" minLength=\"2\" maxLength=\"40\" required />\r\n                <span className=\"popup__input-error\">Вы пропустили это поле.</span>\r\n            </label>\r\n            <label className=\"popup__input\">\r\n                <input onChange={(e) => setDescription(e.target.value)} type=\"text\" className=\"popup__text popup__text_type_job\" name=\"popup__text_type_job\" placeholder=\"Профессия исследователя\" minLength=\"2\" maxLength=\"200\" required />\r\n                <span className=\"popup__input-error\">Вы пропустили это поле.</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoading }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar(avatarRef.current.value);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" buttonText={isLoading ? \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={onClose} onSubmit={(e) => handleSubmit(e)}>\r\n            <label className=\"popup__input\">\r\n                <input ref={avatarRef} type=\"url\" className=\"popup__text popup__text_type_placelink\" name=\"popup__text_type_placelink\" placeholder=\"https://unsplash.com/example.jpg\" required />\r\n                <span className=\"popup__input-error\">Введите адрес сайта.</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onUpdateCard, isLoading }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [link, setLink] = React.useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const card = {\r\n            name: name,\r\n            link: link,\r\n            owner: {\r\n                _id: currentUser._id,\r\n            },\r\n            likes: [],\r\n        }\r\n        onUpdateCard(card);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"place\" title=\"Новое место\" buttonText={isLoading ? \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={onClose} onSubmit={(e) => handleSubmit(e)}>\r\n            <label className=\"popup__input\">\r\n                <input onChange={(e) => setName(e.target.value)} type=\"text\" className=\"popup__text popup__text_type_placename\" name=\"popup__text_type_placename\" placeholder=\"Горный Алтай\" minLength=\"2\" maxLength=\"30\" required />\r\n                <span className=\"popup__input-error\">Вы пропустили это поле.</span>\r\n            </label>\r\n            <label className=\"popup__input\">\r\n                <input onChange={(e) => setLink(e.target.value)} type=\"url\" className=\"popup__text popup__text_type_placelink\" name=\"popup__text_type_placelink\" placeholder=\"https://unsplash.com/example.jpg\" required />\r\n                <span className=\"popup__input-error\">Введите адрес сайта.</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nfunction AddDeletePopup({ isOpen, onClose, onSubmit }) {\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onSubmit();\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"delete\" title=\"Вы уверены?\" buttonText=\"Да\" isOpen={isOpen} onClose={onClose} onSubmit={(e) => handleSubmit(e)}>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddDeletePopup;","export class FormValidator {\r\n    constructor(data, form) {\r\n        this._form = form;\r\n        this._inputList = Array.from(this._form.querySelectorAll(data.inputSelector));\r\n        this._button = this._form.querySelector(data.buttonSelector);\r\n        this._fieldSelector = data.fieldSelector;\r\n        this._errorSelector = data.errorSelector;\r\n    }\r\n\r\n    _setEventListeners() {\r\n        this._form.addEventListener('submit', (evt) => {\r\n            evt.preventDefault();\r\n        });\r\n\r\n        this._toggleSubmitButton();\r\n\r\n        this._inputList.forEach((formInput) => {\r\n            const formError = formInput.closest(this._fieldSelector).querySelector(this._errorSelector);\r\n            formInput.addEventListener('input', () => {\r\n                this._isValid(formInput, formError);\r\n                this._toggleSubmitButton();\r\n            });\r\n        });\r\n    }\r\n\r\n    _isValid(formInput, formError) {\r\n        if (!formInput.validity.valid) {\r\n            this._showInputError(formInput, formError);\r\n        }\r\n        else {\r\n            this._hideInputError(formInput, formError);\r\n        }\r\n    }\r\n\r\n    _showInputError(formInput, formError) {\r\n        formError.classList.add('popup__input-error_active');\r\n        formInput.classList.add('popup__text_type_error');\r\n        if (formInput) {\r\n            formError.textContent = formInput.validationMessage;\r\n        }\r\n    }\r\n\r\n    _hideInputError(formInput, formError) {\r\n        formError.classList.remove('popup__input-error_active');\r\n        formInput.classList.remove('popup__text_type_error');\r\n        formError.textContent = '';\r\n    }\r\n\r\n    formReset() {\r\n        this._inputList.forEach((input) => {\r\n            const formError = input.closest(this._fieldSelector).querySelector(this._errorSelector);\r\n            this._hideInputError(input, formError);\r\n            this._form.reset();\r\n            this._toggleSubmitButton();\r\n        });\r\n    }\r\n\r\n\r\n    _toggleSubmitButton() {\r\n        if (this._hasInvalidInput()) {\r\n            this._button.classList.add('popup__add-button_inactive');\r\n            this._button.setAttribute('disabled', true);\r\n        }\r\n        else {\r\n            this._button.classList.remove('popup__add-button_inactive');\r\n            this._button.removeAttribute('disabled');\r\n        }\r\n    }\r\n\r\n    _hasInvalidInput() {\r\n        return (this._inputList.some((input) => {\r\n            return !input.validity.valid;\r\n        }));\r\n    }\r\n\r\n\r\n    enableValidation() {\r\n        this._setEventListeners();\r\n    }\r\n}\r\n\r\nexport const selectors = {\r\n    formSelector: '.popup__container',\r\n    fieldSelector: '.popup__input',\r\n    inputSelector: '.popup__text',\r\n    errorSelector: '.popup__input-error',\r\n    buttonSelector: '.popup__add-button',\r\n    \r\n};\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport Main from './Main/Main';\nimport ImagePopup from './ImagePopup/ImagePopup';\nimport Footer from './Footer/Footer';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup/EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup/EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup/AddPlacePopup';\nimport AddDeletePopup from './AddDeletePopup/AddDeletePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { FormValidator, selectors } from '../utils/formValidator';\n\nfunction Cards() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState();\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState({});\n\n  /**\n * return cards and initial user info from the server\n */\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([user, items]) => {\n        setCurrentUser(user);\n        setCards(items);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  /**\n * change number of likes in the card and send card likes info to the server\n * @param   {object} card  card being clicked\n */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.changeLike(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  /**\n* open popup that edits user data\n*/\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  /**\n * open popup that edits avatar link\n */\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  /**\n* open popup that adds new card\n*/\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  /**\n * enable validation for the form that adds new card by creating \n * new instance of FormValidator class\n * @return  {function}   method that resets the form\n */\n  useEffect(() => {\n    const placeValidator = new FormValidator(selectors, document.querySelector('.popup__container_type_place'));\n    placeValidator.enableValidation();\n\n    return placeValidator.formReset();\n  }, [isAddPlacePopupOpen])\n\n\n  /**\n   * enable validation for the form that edits profile by creating \n   * new instance of FormValidator class\n   * @return  {function}   method that resets the form\n   */\n  useEffect(() => {\n    const profileValidator = new FormValidator(selectors, document.querySelector('.popup__container_type_profile'));\n    profileValidator.enableValidation();\n\n    return profileValidator.formReset();\n  }, [isEditProfilePopupOpen])\n\n\n  /**\n   * enable validation for the form that edits avatar by creating \n   * new instance of FormValidator class\n   * @return  {function}   method that resets the form\n   */\n  useEffect(() => {\n    const avatarValidator = new FormValidator(selectors, document.querySelector('.popup__container_type_avatar'));\n    avatarValidator.enableValidation();\n\n    return avatarValidator.formReset();\n  }, [isEditAvatarPopupOpen])\n\n  /**\n   * close all popups \n   */\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(undefined);\n  }\n\n  /**\n   * open popup that enlarges the picture while clicking on the card \n   */\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  /**\n    * change user data on web-site and send new user data to the server \n    */\n  function handleUpdateUser(user) {\n    setIsLoading(true);\n    api.sendUserInfo(user)\n      .then(() => {\n        closeAllPopups();\n        setCurrentUser(user);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  /**\n  * change avatar data on web-site and send new avatar data to the server \n  */\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api.changeAvatar(avatar)\n      .then(() => {\n        closeAllPopups();\n        setCurrentUser({\n          name: currentUser.name,\n          about: currentUser.about,\n          avatar: avatar,\n        })\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  /**\n      * add new card to the server and change array of cards shown on the web-site\n      */\n  function handleAddPlaceSubmit(card) {\n    setIsLoading(true);\n    api.postNewCard(card)\n      .then((newCard) => {\n        setCards([newCard,...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  /**\n    * delete card\n    */\n  function handleCardDelete(card) {\n    setDeletePopupOpen(true);\n    setCardToDelete(card);\n  }\n  /**\n     * delete card on the server and change array of cards shown on the web-site\n     */\n  function cardDelete() {\n    api.deleteCard(cardToDelete._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== cardToDelete._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Main cards={cards} handleCardLike={(card) => handleCardLike(card)} handleCardDelete={(card) => handleCardDelete(card)} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\n        <EditProfilePopup isLoading={isLoading} isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={(user) => handleUpdateUser(user)} />\n        <AddPlacePopup isLoading={isLoading} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onUpdateCard={(card) => handleAddPlaceSubmit(card)} />\n        <AddDeletePopup isOpen={isDeletePopupOpen} onClose={closeAllPopups} onSubmit={cardDelete} />\n        <EditAvatarPopup isLoading={isLoading} isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={(avatar) => handleUpdateAvatar(avatar)} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <Footer />\n      </CurrentUserContext.Provider>\n    </div>);\n}\n\nexport default Cards;\n","import React, { useState } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Header from './Header/Header';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login/Login';\r\nimport Register from './Register/Register';\r\nimport Cards from './Cards';\r\n\r\nfunction App() {\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    function handleLogin() {\r\n        setLoggedIn(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <Header loggedIn={loggedIn} />\r\n            <main className=\"content\">\r\n                <Switch>\r\n                    <ProtectedRoute path=\"/cards\" loggedIn={loggedIn} component={Cards} />\r\n                    <Route path=\"/sign-in\">\r\n                        <Register />\r\n                    </Route>\r\n                    <Route path=\"/sign-up\">\r\n                        <Login handleLogin={handleLogin} />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        {loggedIn ? <Redirect to=\"/cards\" /> : <Redirect to=\"/sign-in\" />}\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}