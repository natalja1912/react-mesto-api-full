{"version":3,"sources":["images/header-logo.svg","images/login-success.svg","images/login-failure.svg","utils/auth.js","components/ProtectedRoute/ProtectedRoute.js","components/Header/Header.js","components/PopupWithForm/PopupWithForm.js","components/Login/Login.js","components/Register/Register.js","contexts/CurrentUserContext.js","components/Card/Card.js","components/Main/Main.js","components/ImagePopup/ImagePopup.js","components/Footer/Footer.js","utils/api.js","components/EditProfilePopup/EditProfilePopup.js","components/EditAvatarPopup/EditAvatarPopup.js","components/AddPlacePopup/AddPlacePopup.js","components/AddDeletePopup/AddDeletePopup.js","components/Cards/Cards.js","components/InfoTooltip/InfoTooltip.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","BASE_URL","ProtectedRoute","Component","component","props","loggedIn","to","Header","className","classes","src","headerLogoPath","alt","children","PopupWithForm","name","isOpen","onSubmit","noValidate","title","type","buttonText","onClick","onClose","Login","useState","email","password","inputValues","setInputValues","handleChange","e","target","value","preventDefault","onLogin","console","log","handleSubmit","placeholder","required","id","onChange","Register","onRegister","CurrentUserContext","React","createContext","Card","card","handleCard","handleCardLike","handleCardDelete","currentUser","useContext","isOwn","_id","owner","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","aria-label","length","Main","cards","onEditProfile","onAddPlace","onEditAvatar","onCardClick","sortedCards","sort","a","b","style","backgroundImage","avatar","about","map","item","key","ImagePopup","Footer","api","options","_getResponseData","res","ok","json","Promise","reject","Error","status","this","_url","baseUrl","token","localStorage","getItem","fetch","headers","_getHeaders","then","data","method","body","JSON","stringify","cardId","EditProfilePopup","onUpdateUser","isLoading","setName","description","setDescription","useEffect","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","setLink","current","ref","AddPlacePopup","onUpdateCard","AddDeletePopup","Cards","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeletePopupOpen","setDeletePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setIsLoading","cardToDelete","setCardToDelete","headerItemsActive","setHeaderItemsActive","closeAllPopups","undefined","all","getUserInfo","getInitialCards","user","items","catch","err","handleEsc","document","addEventListener","removeEventListener","Provider","handleExit","changeLike","newCard","newCards","c","sendUserInfo","finally","handleUpdateUser","postNewCard","handleAddPlaceSubmit","deleteCard","filter","changeAvatar","handleUpdateAvatar","InfoTooltip","text","successImage","failureImage","App","setLoggedIn","active","infoToolValues","setInfoToolValues","infoToolActive","setInfoToolActive","history","useHistory","handleRegister","response","message","statusText","setItem","handleLogin","jwt","removeItem","push","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c2110178.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-success.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-failure.4072126c.svg\";","export const BASE_URL = 'https://api.pikachu.students.nomoredomains.rocks';\r\n\r\nexport const authorize = (password, email) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ \"password\": password, \"email\": email })\r\n    })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                if (response.status === 400) {\r\n                    return Promise.reject({\r\n                        status: response.status,\r\n                        message: 'Не передано одно из полей'\r\n                    })\r\n                }\r\n                if (response.status === 401) {\r\n                    return Promise.reject({\r\n                        status: response.status,\r\n                        message: 'Пользователь с email не найден'\r\n                    })\r\n                }\r\n                return Promise.reject({\r\n                    status: response.status,\r\n                    message: response.statusText\r\n                })\r\n            }\r\n            return response.json();\r\n        })\r\n};\r\n\r\nexport const register = (password, email) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \"password\": password, \"email\": email })\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                if (response.status === 400) {\r\n                    return Promise.reject({\r\n                        status: response.status,\r\n                        message: 'Некорректно заполнено одно из полей'\r\n                    })\r\n                }\r\n                return Promise.reject({\r\n                    status: response.status,\r\n                    message: response.statusText\r\n                })\r\n            }\r\n            return response.json()\r\n        })\r\n        .then((data) => {\r\n            console.log(data);\r\n            localStorage.setItem('jwt', data.token);\r\n            return data;\r\n        })\r\n};\r\n\r\nexport const getContent = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                if (response.status === 401) {\r\n                    return Promise.reject({\r\n                        status: response.status,\r\n                        message: 'Токен не передан или передан не в том формате'\r\n                    })\r\n                }\r\n                return Promise.reject({\r\n                    status: response.status,\r\n                    message: response.statusText\r\n                })\r\n            }\r\n            return response.json();\r\n        })\r\n} ","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n   \r\n    return (\r\n        <Route>\r\n            {\r\n                () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport headerLogoPath from '../../images/header-logo.svg';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className={`header ${props.classes}`}>\r\n            <img className=\"header__logo\" src={headerLogoPath} alt=\"Логотип\" />\r\n            <div className=\"header__items\">{props.children}</div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <form className={`popup__container popup__container_type_${props.name} popup__item`} name={`popup__container_type_${props.name}`} onSubmit={props.onSubmit} noValidate>\r\n                <h2 className={`popup__heading popup__heading_type_${props.name}`}>{props.title}</h2>\r\n                {props.children}\r\n                <button className={`popup__add-button popup__add-button_type_${props.name}`} type=\"submit\">\r\n                    {props.buttonText}\r\n                </button>\r\n                <button className={`popup__close-button popup__close-button_type_${props.name}`} type=\"button\" onClick={props.onClose}></button>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nfunction Login(props) {\r\n    const [inputValues, setInputValues] = useState({ email: '', password: '' });\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n        setInputValues(\r\n            {\r\n                ...inputValues,\r\n                [name]: value,\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!inputValues.email || !inputValues.password) {\r\n            console.log(\"Заполните все поля формы\");\r\n            return;\r\n        }\r\n        props.onLogin({password: inputValues.password, email: inputValues.email});\r\n        setInputValues({ email: '', password: '' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Link to=\"/signup\" className=\"header__item header__link\">Регистрация</Link>\r\n            </Header>\r\n            <div className=\"register register_type_login\">\r\n                <PopupWithForm name=\"dark\" title=\"Вход\" buttonText=\"Войти\" isOpen={true} onSubmit={(e) => handleSubmit(e)}>\r\n                    <input className=\"popup__input popup__input_dark\" name=\"email\" placeholder=\"Email\" required id=\"email\" type=\"email\" value={inputValues.email} onChange={(e) => handleChange(e)} />\r\n                    <input className=\"popup__input popup__input_dark\" name=\"password\" placeholder=\"Пароль\" required id=\"password\" type=\"password\" value={inputValues.password} onChange={(e) => handleChange(e)} />\r\n                </PopupWithForm>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nfunction Register(props) {\r\n    const [inputValues, setInputValues] = useState({ email: '', password: '' });\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n        setInputValues(\r\n            {\r\n                ...inputValues,\r\n                [name]: value\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!inputValues.email || !inputValues.password) {\r\n            console.log(\"Заполните все поля формы\");\r\n            return;\r\n        }\r\n        props.onRegister({password: inputValues.password, email: inputValues.email});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Link to=\"/signin\" className=\"header__item header__link\">Войти</Link>\r\n            </Header>\r\n            <div className=\"register\">\r\n                <PopupWithForm name=\"dark\" isOpen={true} title=\"Регистрация\" buttonText=\"Зарегистрироваться\" onSubmit={(e) => handleSubmit(e)}>\r\n                    <input className=\"popup__input popup__input_dark\" name=\"email\" placeholder=\"Email\" required id=\"email\" type=\"email\" value={inputValues.email} onChange={(e) => handleChange(e)} />\r\n                    <input className=\"popup__input popup__input_dark\" name=\"password\" placeholder=\"Пароль\" required id=\"password\" type=\"password\" value={inputValues.password} onChange={(e) => handleChange(e)} />\r\n                </PopupWithForm>\r\n                <div className=\"register__signup\">\r\n                    <Link to=\"/signin\" className=\"register__link\">Уже зарегистрированы? Войти</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card({ card, handleCard, handleCardLike, handleCardDelete }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn = currentUser._id === card.owner\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `place__delete-button ${isOwn ? 'place__delete-button_visible' : 'place__delete-button_hidden'}`\r\n    );\r\n\r\n    const isLiked = card.likes.some(i => i === currentUser._id);\r\n    const cardLikeButtonClassName = `place__like-button ${isLiked && 'place__like-button_active'}`;\r\n\r\n    function handleClick() {\r\n        handleCard(card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"place\">\r\n            <button className=\"place__image-button\" onClick={handleClick}><img className=\"place__image\" src={card.link} alt={card.name} /></button>\r\n            <div className=\"place__info\">\r\n                <p className=\"place__heading\">{card.name}</p>\r\n                <div className=\"place__buttons\">\r\n                    <button className={cardLikeButtonClassName} onClick={() => handleCardLike(card)} aria-label=\"Мне нравится\" type=\"button\"></button>\r\n                    <button className=\"place__sumoflikes-button\" aria-label=\"Количество лайков\" type=\"button\">{card.likes ? card.likes.length : 0}</button>\r\n                </div>\r\n            </div>\r\n            <button className={cardDeleteButtonClassName} onClick={() => handleCardDelete(card)} aria-label=\"Удалить картинку\" type=\"button\"></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nfunction Main({ cards, onEditProfile, onAddPlace, onEditAvatar, onCardClick, handleCardLike, handleCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const sortedCards = cards.sort((a, b) => a._id < b._id ? 1 : -1);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"cover\">\r\n        <div className=\"cover__profile\">\r\n          <button className=\"cover__image\" style={{ backgroundImage: `url(${currentUser.avatar})` }} onClick={onEditAvatar}></button>\r\n          <div className=\"cover__heading-info\">\r\n            <h1 className=\"cover__heading\">{currentUser.name}</h1>\r\n            <button className=\"cover__edit\" onClick={onEditProfile} aria-label=\"Редактировать\" type=\"button\"></button>\r\n          </div>\r\n          <p className=\"cover__subheading\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"cover__add\" onClick={onAddPlace} aria-label=\"Добавить\" type=\"button\"></button>\r\n      </section>\r\n      <section className=\"places\">\r\n        {sortedCards.map((item) => (<Card key={item._id} card={item} handleCard={onCardClick} handleCardLike={(card) => handleCardLike(card)} handleCardDelete={(card) => handleCardDelete(card)} />))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n  return (\r\n    <section className={`popup popup_type_photo ${card && 'popup_opened'}`} >\r\n      <div className=\"popup__image-group popup__item\">\r\n        <img className=\"popup__image\" src={card ? card.link : ''} alt={card ? card.name : ''} />\r\n        <p className=\"popup__text popup__text_type_photo\">{card ? card.name : ''}</p>\r\n        <button className=\"popup__close-button popup__close-button_type_photo\" onClick={onClose} type=\"button\"></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy;2020&nbsp;Mesto&nbsp;Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","class Api {\r\n  constructor(options) {\r\n    this._url = options.baseUrl;\r\n  }\r\n\r\n  _getHeaders() {\r\n    const token = localStorage.getItem('jwt'); \r\n    return {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  }\r\n\r\n  _getResponseData = (res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: this._getHeaders()\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._getHeaders()\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n  }\r\n\r\n  sendUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n  }\r\n\r\n  postNewCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._getHeaders(),\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n  }\r\n\r\n  changeLike(cardId, isLiked) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: isLiked ? 'PUT' : 'DELETE',\r\n      headers: this._getHeaders()\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n  }\r\n\r\n  changeAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify({\r\n        avatar: data\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._getResponseData(res);\r\n      })\r\n      .then((res) => {\r\n        return res;\r\n      })\r\n  }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://api.pikachu.students.nomoredomains.rocks',\r\n\r\n});\r\n\r\nexport default api;","import React, { useEffect, useState } from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoading }) {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n            name,\r\n            about: description,\r\n            avatar: currentUser.avatar,\r\n        });\r\n    }\r\n\r\n    function handleClose(){\r\n        setName('');\r\n        setDescription('');\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setName('');\r\n        setDescription('');\r\n    }, [onClose]);\r\n\r\n    return (\r\n        <PopupWithForm name=\"profile\" title=\"Редактировать профиль\" buttonText={isLoading ? \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={handleClose} onSubmit={(e) => handleSubmit(e)}>\r\n            <label className=\"popup__input\">\r\n                <input value={name} onChange={(e) => setName(e.target.value)} type=\"text\" className=\"popup__text popup__text_type_name\" name=\"popup__text_type_name\" placeholder=\"Имя исследователя\" minLength=\"2\" maxLength=\"40\" required />\r\n                <span className=\"popup__input-error\">Вы пропустили это поле.</span>\r\n            </label>\r\n            <label className=\"popup__input\">\r\n                <input value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" className=\"popup__text popup__text_type_job\" name=\"popup__text_type_job\" placeholder=\"Профессия исследователя\" minLength=\"2\" maxLength=\"200\" required />\r\n                <span className=\"popup__input-error\">Вы пропустили это поле.</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React, { useState, useEffect } from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoading }) {\r\n    const avatarRef = React.useRef();\r\n    const [link, setLink] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar(avatarRef.current.value);\r\n    }\r\n\r\n    function handleClose() {\r\n        setLink('');\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLink('');\r\n    }, [onClose]);\r\n\r\n    return (\r\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" buttonText={isLoading ? \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={handleClose} onSubmit={(e) => handleSubmit(e)}>\r\n            <label className=\"popup__input\">\r\n                <input value={link} onChange={(e) => setLink(e.target.value)} ref={avatarRef} type=\"url\" className=\"popup__text popup__text_type_placelink\" name=\"popup__text_type_placelink\" placeholder=\"https://unsplash.com/example.jpg\" required />\r\n                <span className=\"popup__input-error\">Введите адрес сайта.</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React, { useState, useEffect } from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onUpdateCard, isLoading }) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = useState('');\r\n    const [link, setLink] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const card = {\r\n            name: name,\r\n            link: link,\r\n            owner: {\r\n                _id: currentUser._id,\r\n            },\r\n            likes: [],\r\n        }\r\n        onUpdateCard(card);\r\n    }\r\n\r\n    function handleClose() {\r\n        setName('');\r\n        setLink('');\r\n        onClose();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setName('');\r\n        setLink('');\r\n    }, [onClose]);\r\n\r\n\r\n    return (\r\n        <PopupWithForm name=\"place\" title=\"Новое место\" buttonText={isLoading ? \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={handleClose} onSubmit={(e) => handleSubmit(e)}>\r\n            <label className=\"popup__input\">\r\n                <input value={name} onChange={(e) => setName(e.target.value)} type=\"text\" className=\"popup__text popup__text_type_placename\" name=\"popup__text_type_placename\" placeholder=\"Горный Алтай\" minLength=\"2\" maxLength=\"30\" required />\r\n                <span className=\"popup__input-error\">Вы пропустили это поле.</span>\r\n            </label>\r\n            <label className=\"popup__input\">\r\n                <input value={link} onChange={(e) => setLink(e.target.value)} type=\"url\" className=\"popup__text popup__text_type_placelink\" name=\"popup__text_type_placelink\" placeholder=\"https://unsplash.com/example.jpg\" required />\r\n                <span className=\"popup__input-error\">Введите адрес сайта.</span>\r\n            </label>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nfunction AddDeletePopup({ isOpen, onClose, onSubmit }) {\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onSubmit();\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name=\"delete\" title=\"Вы уверены?\" buttonText=\"Да\" isOpen={isOpen} onClose={onClose} onSubmit={(e) => handleSubmit(e)}>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddDeletePopup;","import React, { useState, useEffect } from 'react';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport ImagePopup from '../ImagePopup/ImagePopup';\nimport Footer from '../Footer/Footer';\nimport api from '../../utils/api';\nimport EditProfilePopup from '../EditProfilePopup/EditProfilePopup';\nimport EditAvatarPopup from '../EditAvatarPopup/EditAvatarPopup';\nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup';\nimport AddDeletePopup from '../AddDeletePopup/AddDeletePopup';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nfunction Cards(props) {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState();\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState({});\n  const [headerItemsActive, setHeaderItemsActive] = useState('');\n\n  /**\n * return cards and initial user info from the server\n */\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([user, items]) => {\n        setCurrentUser(user.data);\n        setCards(items.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  /**\n * change number of likes in the card and send card likes info to the server\n * @param   {object} card  card being clicked\n */\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i === currentUser._id);\n\n    api.changeLike(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  /**\n* open popup that edits user data\n*/\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  /**\n * open popup that edits avatar link\n */\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n \n  /**\n* open popup that adds new card\n*/\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  /*close all popups */\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(undefined);\n  }\n\n  /*close all popups by Escape */\n  const handleEsc = (e) => {\n    if (e.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleEsc);\n\n    return (() => document.removeEventListener('keydown', handleEsc));\n  }, [])\n\n  /**\n   * open popup that enlarges the picture while clicking on the card \n   */\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  /**\n    * change user data on web-site and send new user data to the server \n    */\n  function handleUpdateUser(user) {\n    setIsLoading(true);\n    api.sendUserInfo(user)\n      .then(() => {\n        closeAllPopups();\n        setCurrentUser(user);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  /**\n  * change avatar data on web-site and send new avatar data to the server \n  */\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api.changeAvatar(avatar)\n      .then(() => {\n        closeAllPopups();\n        setCurrentUser({\n          name: currentUser.name,\n          about: currentUser.about,\n          avatar: avatar,\n        })\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  /**\n      * add new card to the server and change array of cards shown on the web-site\n      */\n  function handleAddPlaceSubmit(card) {\n    setIsLoading(true);\n    api.postNewCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  /**\n    * delete card\n    */\n  function handleCardDelete(card) {\n    setDeletePopupOpen(true);\n    setCardToDelete(card);\n  }\n  /**\n     * delete card on the server and change array of cards shown on the web-site\n     */\n  function cardDelete() {\n    api.deleteCard(cardToDelete._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== cardToDelete._id));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleMenuButton() {\n    let status = headerItemsActive;\n    status ? setHeaderItemsActive('') : setHeaderItemsActive('active');\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header classes={`header_${headerItemsActive}`}>\n          <button className={`header__menu-button header__menu-button_${headerItemsActive}`} onClick={handleMenuButton}></button>\n          <div className={`header__hidden-items header__hidden-items_${headerItemsActive}`}>\n            <p className=\"header__item\">{props.user}</p>\n            <button className=\"header__item header__exit-button\" onClick={props.handleExit}>Выйти</button>\n          </div>\n        </Header>\n        <Main cards={cards} handleCardLike={(card) => handleCardLike(card)} handleCardDelete={(card) => handleCardDelete(card)} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} />\n        <EditProfilePopup isLoading={isLoading} isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={(user) => handleUpdateUser(user)} />\n        <AddPlacePopup isLoading={isLoading} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onUpdateCard={(card) => handleAddPlaceSubmit(card)} />\n        <AddDeletePopup isOpen={isDeletePopupOpen} onClose={closeAllPopups} onSubmit={cardDelete} />\n        <EditAvatarPopup isLoading={isLoading} isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={(avatar) => handleUpdateAvatar(avatar)} />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <Footer />\n      </CurrentUserContext.Provider>\n    </div>);\n}\n\nexport default Cards;\n","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\nimport successImage from '../../images/login-success.svg';\r\nimport failureImage from '../../images/login-failure.svg';\r\n\r\nfunction InfoTooltip(props) {\r\n    return (\r\n        <div className=\"modal-window\">\r\n            <PopupWithForm name=\"infotool\" isOpen={props.isOpen} onClose={props.onClose}>\r\n                <img className=\"modal-window__image\" alt={props.text} src={(props.name === 'success') ? successImage : failureImage} />\r\n                <p className=\"modal-window__text\">{props.text}</p>\r\n            </PopupWithForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoTooltip;","import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\nimport * as auth from '../../utils/auth';\r\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\r\nimport Login from '../Login/Login';\r\nimport Register from '../Register/Register';\r\nimport Cards from '../Cards/Cards';\r\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\r\n\r\nfunction App() {\r\n    const [loggedIn, setLoggedIn] = useState({ loggedIn: false, email: '' });\r\n    const [infoToolValues, setInfoToolValues] = useState({ active: false, name: '', text: '' });\r\n    const [infoToolActive, setInfoToolActive] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const jwt = localStorage.getItem('jwt');\r\n        if (jwt) {\r\n            auth.getContent(jwt).then((res) => {\r\n                if (res) {\r\n                    setLoggedIn({ loggedIn: true, email: res.data.email });\r\n                }\r\n                else localStorage.removeItem('jwt');\r\n            })\r\n                .catch(() => {\r\n                    console.log(`Пользователь не зарегистрирован в системе`);\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        history.push('/cards');\r\n    }, [loggedIn]);\r\n\r\n    function handleRegister(user) {\r\n        setInfoToolActive(true);\r\n        auth.register(user.password, user.email)\r\n            .then((data) => {\r\n                if (data) {\r\n                    setLoggedIn({ loggedIn: true, email: user.email });\r\n                    setInfoToolValues({ active: true, name: 'success', text: 'Вы успешно зарегистрировались!' });\r\n                }\r\n                else {\r\n                    setInfoToolValues({ active: true, name: 'failure', text: 'Что-то пошло не так! Попробуйте ещё раз.' });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setInfoToolValues({ active: true, name: 'failure', text: 'Что-то пошло не так! Попробуйте ещё раз.' });\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    function handleLogin(user) {\r\n        auth.authorize(user.password, user.email)\r\n            .then((data) => {\r\n                if (data) {\r\n                    localStorage.setItem('jwt', data.token);\r\n                    setLoggedIn({ loggedIn: true, email: user.email });\r\n                }\r\n                if (!data) {\r\n                    console.log('Произошла ошибка');\r\n                }\r\n                else return;\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    function infoToolClose() {\r\n        setInfoToolValues({ active: false, path: '', text: '' });\r\n    }\r\n\r\n    function handleExit() {\r\n        localStorage.removeItem('jwt');\r\n        history.push('/signin');\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <main className=\"content\">\r\n                {infoToolActive && <InfoTooltip name={infoToolValues.name} text={infoToolValues.text} isOpen={infoToolValues.active} onClose={infoToolClose} />}\r\n                <Switch>\r\n                    <ProtectedRoute path=\"/cards\" loggedIn={loggedIn.loggedIn} component={Cards} user={loggedIn.email} handleExit={handleExit} />\r\n                    <Route path=\"/signup\">\r\n                        <Register onRegister={(user) => handleRegister(user)} />\r\n                    </Route>\r\n                    <Route path=\"/signin\">\r\n                        <Login onLogin={(user) => handleLogin(user)} />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        {loggedIn.loggedIn ? <Redirect to=\"/cards\" /> : <Redirect to=\"/signin\" />}\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}